{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-12',\n  headers: {\n    authorization: '7dffb200-f638-4072-8a44-b6a3c5737d41',\n    'Content-Type': 'application/json'\n  }\n};\n\n//Проверка ответа сервера\nconst checkServerResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  // если ошибка, отклоняем промис\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\n\n//Выгрузка профиля пользователя\nexport const getUserProfile = () => {\n  return fetch (`${config.baseUrl}/users/me`, {\n  headers: config.headers\n  })\n  .then(checkServerResponse)\n};\n\n//Выгрузка карточек\nexport const getAllCards = () => {\n  return fetch (`${config.baseUrl}/cards`, {\n    headers: config.headers\n    })\n    .then(checkServerResponse)\n  };\n\n//Редактирование данных профиля на сервере\nexport const patchUserProfile = (name, description) => {\n  return fetch (`${config.baseUrl}/users/me`,  {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify ({\n      name: `${name}`,\n      about: `${description}`,\n    }),\n  })\n  .then (checkServerResponse)\n }\n\n //Добавление новой карточки\n export const postNewCard = (name, link) => {\n  return fetch (`${config.baseUrl}/cards`,  {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify ({\n      name: `${name}`,\n      link: `${link}`,\n    }),\n  })\n  .then (checkServerResponse)\n }\n\n //Удаление карточки\n export const deleteCardApi = (id) => {\n  return fetch (`${config.baseUrl}/cards/${id}`, {\n    method: 'DELETE',\n    headers: config.headers,\n    })\n  .then (checkServerResponse)\n  }\n\n//Постановка лайка\nexport const addLike = (id) => {\n  return fetch (`${config.baseUrl}/cards/likes/${id}`, {\n  method: 'PUT',\n  headers: config.headers,\n\n  })\n    .then (checkServerResponse)\n}\n\n//Снятие лайка\nexport const deleteLike = (id) => {\n  return fetch (`${config.baseUrl}/cards/likes/${id}`, {\n    method: 'DELETE',\n    headers: config.headers,\n})\n    .then (checkServerResponse)\n}\n\n//Отправка на сервер нового аватара\nexport const patchAvatar = (avatar) => {\n  return fetch (`${config.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify ({\n      avatar: `${avatar}`\n    })\n  })\n    .then (checkServerResponse)\n}","import {deleteCardApi, addLike, deleteLike} from './api'\n\nconst cardTemplate = document.querySelector('#card-template').content;\n\n\nconst likeCard = (cardFilling, likeNumber, LikeButton) => {\n  if (LikeButton.classList.contains('card__like-button_is-active')) {\n    deleteLike(cardFilling)\n    .then((cardFilling) =>{\n      likeNumber.textContent = cardFilling.likes.length;\n      LikeButton.classList.remove('card__like-button_is-active');\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  } else {\n    addLike(cardFilling)\n      .then((cardFilling) => {\n        likeNumber.textContent = cardFilling.likes.length;\n        LikeButton.classList.add('card__like-button_is-active');\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n\nfunction createCard(cardFilling, profile, deleteCard, handleImage, likeCard) {\n    const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n    cardElement.querySelector('.card__title').textContent = cardFilling.name;\n    const cardImage = cardElement.querySelector('.card__image');\n    cardImage.src = cardFilling.link;\n    cardImage.alt = cardFilling.name;\n\n\n    const cardDeleteButton = cardElement.querySelector('.card__delete-button');\n    const cardLikeButton = cardElement.querySelector('.card__like-button');\n    const likeNumber = cardElement.querySelector('.card__like-number');\n    const isLiked = cardFilling.likes.some((like) => profile === like._id);\n    likeNumber.textContent = cardFilling.likes.length;\n    const cardId = cardFilling._id;\n\n    if (isLiked) {\n      cardLikeButton.classList.add('card__like-button_is-active');\n    } else {\n      cardLikeButton.classList.remove('card__like-button_is-active');\n    }\n\n    cardLikeButton.addEventListener('click', () => {\n      likeCard(cardId, likeNumber, cardLikeButton);\n    });\n\n\n    if (cardFilling.owner['_id'] !== profile['_id']) {\n      cardDeleteButton.style.display = \"none\";\n    }\n    else {\n          deleteCard(cardElement)\n          cardDeleteButton.addEventListener('click', () => {\n        deleteCardApi(cardId)\n        .then(() =>{\n          deleteCard(cardElement)\n        })\n        .catch ((err) => {\n          console.log(err)\n        })\n    })\n    }\n    cardImage.addEventListener('click', (cardFilling)=>{handleImage(cardFilling)});\n\n    return cardElement;\n};\n\nfunction deleteCard (element) {\n    element.remove ();\n};//функция удаления карточки\n\nexport {createCard, deleteCard, likeCard};\n","function openModal (popup) {\n    popup.classList.add('popup_is-opened');\n    document.addEventListener('keydown', closePopupEsc);\n }//функция открытия попапа\n\n function closeModal (popup) {\n    popup.classList.remove('popup_is-opened');\n    document.removeEventListener('keydown',closePopupEsc);\n }//функция закрытия попапа\n\n//закрытие модального окна по Esc\nfunction closePopupEsc(evt) {\n   if(evt.key === 'Escape') {\n       const popup = document.querySelector('.popup_is-opened');\n       closeModal(popup);\n   }\n};\n\n //закрытие попапа кликом на оверлей\n const popups = document.querySelectorAll('.popup');\n popups.forEach((popup)=> {popup.addEventListener('click', (evt)=>{\n    if (evt.target.classList.contains('popup')) {\n        closeModal(popup);\n    }\n })});\n\n\nexport {openModal, closeModal};","//функция, которая добавляет класс с ошибкой\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(validationConfig.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(validationConfig.errorClass);\n};\n\n//функция, которая удаляет класс с ошибкой\nconst hideInputError = (formElement, inputElement, validationConfig) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(validationConfig.inputErrorClass);\n  errorElement.classList.remove(validationConfig.errorClass);\n  errorElement.textContent = '';\n};\n\n//функция, которая проверяет валидность поля\nconst isValid = (formElement, inputElement, validationConfig) => {\n  if(inputElement.validity.patternMismatch){\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity('');\n  }\n\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n};\n\n\n// Функция принимает массив полей\nconst hasInvalidInput = (inputList) => {\n    return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  })\n};\n\n// Функция принимает массив полей ввода\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\n  if (hasInvalidInput(inputList)) {\n        buttonElement.disabled = true;\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n  } else {\n        buttonElement.disabled = false;\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n  }\n};\n\nconst setEventListeners = (formElement, validationConfig) => {\nconst inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\nconst buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\ntoggleButtonState(inputList, buttonElement, validationConfig);\n\ninputList.forEach((inputElement) => {\n  inputElement.addEventListener('input', () => {\n    isValid(formElement, inputElement, validationConfig);\n    toggleButtonState(inputList, buttonElement, validationConfig);\n  });\n});\n};\n\nexport const enableValidation = (validationConfig) => {\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n  formList.forEach((formElement) => {\n      setEventListeners(formElement, validationConfig);\n  });\n};\n\nexport const clearValidation = (formElement, validationConfig) => {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, validationConfig)\n  });\n  toggleButtonState(inputList, buttonElement, validationConfig);\n}","import './pages/index.css';\n//import {initialCards} from './scripts/cards.js';\nimport {createCard, deleteCard, likeCard} from './components/card.js';\nimport {openModal, closeModal} from './components/modal.js';\nimport {enableValidation, clearValidation} from './components/validation.js';\nimport {getUserProfile, getAllCards, patchUserProfile, postNewCard, patchAvatar} from './components/api.js';\n\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n\nconst buttonText = 'Сохранить';\nconst buttonTextLoading = 'Сохранение...';\n\nfunction renderLoading (isLoading, button) {\n  if (isLoading) {\n    button.textContent = buttonTextLoading;\n  }\n  else {\n    button.textContent = buttonText;\n  }\n}\n\nenableValidation(validationConfig);\n\nconst cardSection = document.querySelector('.places__list');\nconst avatarImage = document.querySelector(\".profile__image\");\n\n//Получение данных профиля пользователя и карточек с сервера\nPromise.all([getUserProfile(), getAllCards()])\n.then(([profile, initialCards]) => {\n  profileTitle.textContent = profile.name;\n  profileDescription.textContent = profile.about;\n  avatarImage.style.backgroundImage = `url(${profile.avatar})`\n\n  initialCards.forEach((data) => {\n    const insertCard = createCard(data, profile, deleteCard, handleImage, likeCard);\n    cardSection.append(insertCard);\n  });\n})\n.catch((err) => {\n  console.log(err);\n});\n\n const allPopups = document.querySelectorAll('.popup');\n allPopups.forEach((item) => {\n  item.classList.add('popup_is-animated');\n });\n const profileEditButton = document.querySelector('.profile__edit-button');//получаем кнопку редактирования профиля\n const popupTypeEdit = document.querySelector('.popup_type_edit');//получаем попап редактирования профиля\n const profileCloseButton = popupTypeEdit.querySelector('.popup__close');//получаем кнопку закрытия попапа редактирования профиля\n\n const avatarFormElement = document.forms['edit-avatar'];\n const popupTypeAvatar = document.querySelector('.popup_type_avatar');\n const avatarCloseButton = popupTypeAvatar.querySelector('.popup__close');\n const avatarUrl = popupTypeAvatar.querySelector('.popup__input_type_url');\n\n const profileAddButton = document.querySelector('.profile__add-button');//получаем кнопку добавления карточки\n const popupTypeNewCard = document.querySelector('.popup_type_new-card');//получаем попап добавления карточки\n const newCardcloseButton = popupTypeNewCard.querySelector('.popup__close');//получаем кнопку закрытия попапа добавления карточки\n\n const popupTypeImage = document.querySelector('.popup_type_image');//получаем попап открытия картинки\n const popupImageCloseButton = popupTypeImage.querySelector('.popup__close');//получаем кнопку закрытия попапа картинки\n const popupImage = popupTypeImage.querySelector('.popup__image');//получаем элемент изображения модального окна\n const popupText = popupTypeImage.querySelector('.popup__caption');//получаем текстовый элемент попапа картинки\n\n const profileSaveButton = document.querySelector('.profile__popup-save-button');\n const newCardSaveButton = document.querySelector('.new__card-popup-button');\n const avatarSaveButton = document.querySelector('.avatar__popup-button');\n\n avatarImage.addEventListener('click', () => {openModal(popupTypeAvatar)\n   clearValidation(popupTypeAvatar, validationConfig)\n})\n\n function avatarHandleSubmit (evt) {\n  evt.preventDefault();\n  renderLoading(true, avatarSaveButton)\n  patchAvatar(avatarUrl.value)\n  .then((profile) => { avatarImage.style.backgroundImage = `url(${profile.avatar})`;\n  closeModal(popupTypeAvatar);\n  avatarFormElement.reset();\n  })\n  .catch ((err) => {\n    console.log(err)})\n  .finally(() => {\n    renderLoading(false, avatarSaveButton)});\n };\n\n popupTypeAvatar.addEventListener('submit', avatarHandleSubmit);\n avatarCloseButton.addEventListener('click', ()=>{closeModal(popupTypeAvatar)})\n\n profileEditButton.addEventListener('click', ()=>{openModal(popupTypeEdit);\n  clearValidation(popupTypeEdit, validationConfig);\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;});  //открытие редактирования профиля\n profileCloseButton.addEventListener('click', ()=>{closeModal(popupTypeEdit)}); //закрытие редактирования профиля кликом по крестику\n\n profileAddButton.addEventListener('click', ()=>{openModal(popupTypeNewCard);\n  clearValidation(popupTypeNewCard, validationConfig);\n });//открытие создания карточки\n newCardcloseButton.addEventListener('click',()=>{closeModal(popupTypeNewCard)});//закрытие создания карточки кликом по крестику\n\n //функция обработки клика по картинке\n function handleImage(cardFilling) {\n    popupImage.src = cardFilling.target.src;\n    popupImage.alt = cardFilling.target.alt;\n    const imageText = popupImage.alt;\n    popupText.textContent = imageText;\n    openModal(popupTypeImage);\n }\n\n popupImageCloseButton.addEventListener('click', ()=>{closeModal(popupTypeImage)});//закрытие попапа картинки кликом по крестику\n\n//редактирование имени и информации о себе\nconst formElement = popupTypeEdit.querySelector('.popup__form');\nconst nameInput = formElement.querySelector('.popup__input_type_name');\nconst jobInput = formElement.querySelector('.popup__input_type_description');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nnameInput.value = profileTitle.textContent;\njobInput.value = profileDescription.textContent;\n\nfunction profileHandleFormSubmit(evt) {\n  evt.preventDefault();\n  renderLoading(true, profileSaveButton)\n  patchUserProfile(nameInput.value, jobInput.value)\n  .then ((profile) => {\n    profileTitle.textContent = profile.name;\n    profileDescription.textContent = profile.about;\n    closeModal(popupTypeEdit);\n  })\n  .catch((err) => {\n    console.log(err);\n  })\n  .finally(() => {\n    renderLoading(false, profileSaveButton)});\n}\n\n// Прикрепляем обработчик к форме:\nformElement.addEventListener('submit', profileHandleFormSubmit);\n\n// Получаем значения полей формы\nconst newPlaceForm = document.querySelector('.popup_type_new-card');\nconst newCardForm = newPlaceForm.querySelector('.popup__form');\nconst placeNameInput = newPlaceForm.querySelector('.popup__input_type_card-name');\nconst placeLinkInput = newPlaceForm.querySelector('.popup__input_type_url');\n\nfunction submitNewCard(evt) {\n  evt.preventDefault();\n  renderLoading(true, newCardSaveButton)\n  const name = placeNameInput.value;\n  const link = placeLinkInput.value;\n  postNewCard(name, link)\n.then ((newCard) => {\n  const newCardElement = createCard(newCard, newCard.owner, deleteCard, handleImage, likeCard);\n  cardSection.prepend(newCardElement);\n  newCardForm.reset();\n  closeModal(popupTypeNewCard);\n})\n.catch((err) => {\n  console.log(err);\n})\n.finally(() => {\n  renderLoading(false, newCardSaveButton)})\n}\n\nnewCardForm.addEventListener('submit', submitNewCard);\n\nexport {placeNameInput, placeLinkInput, handleImage, cardSection, popupTypeNewCard};"],"names":["config","baseUrl","headers","authorization","checkServerResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","likeCard","cardFilling","likeNumber","LikeButton","id","classList","contains","fetch","method","then","textContent","likes","length","remove","catch","err","console","log","addLike","add","createCard","profile","deleteCard","handleImage","cardElement","cloneNode","name","cardImage","src","link","alt","cardDeleteButton","cardLikeButton","isLiked","some","like","_id","cardId","addEventListener","owner","style","display","element","openModal","popup","closePopupEsc","closeModal","removeEventListener","evt","key","querySelectorAll","forEach","target","hideInputError","formElement","inputElement","validationConfig","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","inputSelector","submitButtonSelector","formSelector","renderLoading","isLoading","button","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation","cardSection","avatarImage","all","_ref","_ref2","initialCards","profileTitle","profileDescription","about","backgroundImage","avatar","data","insertCard","append","item","profileEditButton","popupTypeEdit","profileCloseButton","avatarFormElement","forms","popupTypeAvatar","avatarCloseButton","avatarUrl","profileAddButton","popupTypeNewCard","newCardcloseButton","popupTypeImage","popupImageCloseButton","popupImage","popupText","profileSaveButton","newCardSaveButton","avatarSaveButton","imageText","preventDefault","value","body","JSON","stringify","reset","finally","nameInput","jobInput","description","newPlaceForm","newCardForm","placeNameInput","placeLinkInput","newCard","newCardElement","prepend"],"sourceRoot":""}